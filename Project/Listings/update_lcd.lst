


ARM Macro Assembler    Page 1 


    1 00000000         ; Update number regions of the LCD screen
    2 00000000         
    3 00000000         ; Position of the current number is 
    4 00000000         ; Y address = bank 1  ->  send 0x41  
    5 00000000         ; X address = column 72  ->  send 0xC8 
    6 00000000         ; Position of temperature range numbers is 
    7 00000000         ; Y address = bank 4  ->  send 0x44  
    8 00000000         ; X address = column 37  ->  send 0xA5
    9 00000000         
   10 00000000 40004100 
                       LCD_DC  EQU              0x40004100
   11 00000000 40008008 
                       SSI0_DR EQU              0x40008008
   12 00000000 4000800C 
                       SSI0_SR EQU              0x4000800C
   13 00000000         
   14 00000000         ;LABEL DIRECTIVE VALUE COMMENT
   15 00000000                 AREA             up_LCD , DATA, READONLY
   16 00000000                 THUMB
   17 00000000         
   18 00000000 3E 51 49 
              45 3E    WRITE_0 DCB              0x3e, 0x51, 0x49, 0x45, 0x3e
   19 00000005 00 42 7F 
              40 00    WRITE_1 DCB              0x00, 0x42, 0x7f, 0x40, 0x00
   20 0000000A 42 61 51 
              49 46    WRITE_2 DCB              0x42, 0x61, 0x51, 0x49, 0x46
   21 0000000F 21 41 45 
              4B 31    WRITE_3 DCB              0x21, 0x41, 0x45, 0x4b, 0x31
   22 00000014 18 14 12 
              7F 10    WRITE_4 DCB              0x18, 0x14, 0x12, 0x7f, 0x10
   23 00000019 27 45 45 
              45 39    WRITE_5 DCB              0x27, 0x45, 0x45, 0x45, 0x39
   24 0000001E 3C 4A 49 
              49 30    WRITE_6 DCB              0x3c, 0x4a, 0x49, 0x49, 0x30
   25 00000023 01 71 09 
              05 03    WRITE_7 DCB              0x01, 0x71, 0x09, 0x05, 0x03
   26 00000028 36 49 49 
              49 36    WRITE_8 DCB              0x36, 0x49, 0x49, 0x49, 0x36
   27 0000002D 06 49 49 
              29 1E    WRITE_9 DCB              0x06, 0x49, 0x49, 0x29, 0x1e
   28 00000032         
   29 00000032 08 08 08 
              08 08    WRITE_DASH
                               DCB              0x08, 0x08, 0x08, 0x08, 0x08 
                                                            ; -
   30 00000037         
   31 00000037         
   32 00000037         ;main Area of default_LCD
   33 00000037                 AREA             update_LCD_area , READONLY, COD
E, ALIGN=2
   34 00000000                 THUMB
   35 00000000                 EXPORT           update_LCD
   36 00000000         
   37 00000000         update_LCD
                               PROC
   38 00000000 B53F            PUSH             {R0, R1, R2, R3, R4, R5, LR}
   39 00000002         
   40 00000002 4606            MOV              R6, R0
   41 00000004 460F            MOV              R7, R1



ARM Macro Assembler    Page 2 


   42 00000006 4690            MOV              R8, R2
   43 00000008         
   44 00000008         ; WRITE NUMBER
   45 00000008         ; Position of the current number is 
   46 00000008         ; Y address = bank 1  ->  send 0x41  
   47 00000008         ; X address = column 72  ->  send 0xC8 
   48 00000008 F04F 0441       MOV              R4, #0x41   ; Y address 1
   49 0000000C F04F 05C8       MOV              R5, #0xC8   ; X address 72
   50 00000010 F000 F837       BL               pos_config
   51 00000014         
   52 00000014         
   53 00000014 46B2            MOV              R10, R6
   54 00000016 F000 F850       BL               write_temp
   55 0000001A         
   56 0000001A 46D3            MOV              R11, R10
   57 0000001C F000 F859       BL               write_cont
   58 00000020         
   59 00000020         ; WRITE NUMBER
   60 00000020         ; Position of temperature range numbers is 
   61 00000020         ; Y address = bank 4  ->  send 0x44  
   62 00000020         ; X address = column 37  ->  send 0xA5
   63 00000020 F04F 0444       MOV              R4, #0x44   ; Y address 4
   64 00000024 F04F 05A5       MOV              R5, #0xA5   ; X address 37
   65 00000028 F000 F82B       BL               pos_config
   66 0000002C         
   67 0000002C 46BA            MOV              R10, R7
   68 0000002E F000 F844       BL               write_temp
   69 00000032         
   70 00000032 46D3            MOV              R11, R10
   71 00000034 F000 F84D       BL               write_cont
   72 00000038         
   73 00000038 4D3E            LDR              R5, =WRITE_DASH
   74 0000003A F000 F80F       BL               write
   75 0000003E         
   76 0000003E 46C2            MOV              R10, R8
   77 00000040 F000 F83B       BL               write_temp
   78 00000044         
   79 00000044 46D3            MOV              R11, R10
   80 00000046 F000 F844       BL               write_cont
   81 0000004A         
   82 0000004A         
   83 0000004A         
   84 0000004A         ; exit the function
   85 0000004A E8BD 403F       POP              {R0, R1, R2, R3, R4, R5, LR}
   86 0000004E 4770            BX               LR
   87 00000050         
   88 00000050         
   89 00000050         ; before transmission, check if line is available
   90 00000050 4A39    chk_SSI_fifo
                               LDR              R2, =SSI0_SR
   91 00000052 6813            LDR              R3, [R2]
   92 00000054 F013 0310       ANDS             R3, #0x10
   93 00000058 D1FA            BNE              chk_SSI_fifo
   94 0000005A 4770            BX               LR
   95 0000005C         
   96 0000005C         ; write the desired char to the current location     
   97 0000005C B500    write   PUSH             {LR}
   98 0000005E         ; address of the desired char is in R5
   99 0000005E 4937            LDR              R1, =SSI0_DR



ARM Macro Assembler    Page 3 


  100 00000060 F04F 0405       MOV              R4, #5
  101 00000064 F7FF FFF4 
                       write_r BL               chk_SSI_fifo
  102 00000068 F855 0B01       LDR              R0, [R5], #1
  103 0000006C 6008            STR              R0, [R1]
  104 0000006E 3C01            SUBS             R4, #1
  105 00000070 D1F8            BNE              write_r
  106 00000072         
  107 00000072 F7FF FFED       BL               chk_SSI_fifo
  108 00000076 F04F 0000       MOV              R0, #0x00
  109 0000007A 6008            STR              R0, [R1]
  110 0000007C         
  111 0000007C F85D EB04       POP              {LR}
  112 00000080 4770            BX               LR
  113 00000082         
  114 00000082         
  115 00000082         ; change current position
  116 00000082 B500    pos_config
                               PUSH             {LR}
  117 00000084         ; R5: X position, R4: Y position
  118 00000084 492E            LDR              R1, =LCD_DC
  119 00000086 F04F 0000       MOV              R0, #0x00   ; D/C is low (contr
                                                            ol)
  120 0000008A 6008            STR              R0, [R1]
  121 0000008C         
  122 0000008C         
  123 0000008C F7FF FFE0       BL               chk_SSI_fifo
  124 00000090 492A            LDR              R1, =SSI0_DR
  125 00000092 F04F 0020       MOV              R0, #0x20   ; basic command mod
                                                            e (H = 0) and horiz
                                                            ontal addressing mo
                                                            de (V = 0)
  126 00000096 6008            STR              R0, [R1]
  127 00000098         
  128 00000098 F7FF FFDA       BL               chk_SSI_fifo
  129 0000009C         
  130 0000009C 4620            MOV              R0, R4      ; Y address 
  131 0000009E 6008            STR              R0, [R1]
  132 000000A0         
  133 000000A0 F7FF FFD6       BL               chk_SSI_fifo
  134 000000A4         
  135 000000A4 4628            MOV              R0, R5      ; X address 
  136 000000A6 6008            STR              R0, [R1]
  137 000000A8         
  138 000000A8 F7FF FFD2       BL               chk_SSI_fifo
  139 000000AC         
  140 000000AC 4924            LDR              R1, =LCD_DC
  141 000000AE F04F 0040       MOV              R0, #0x40   ; D/C is high (data
                                                            )
  142 000000B2 6008            STR              R0, [R1]
  143 000000B4         
  144 000000B4 F85D EB04       POP              {LR}
  145 000000B8 4770            BX               LR
  146 000000BA         
  147 000000BA         write_temp                           ; start of data
  148 000000BA         ; R10 is the temperature we want to write
  149 000000BA         
  150 000000BA F04F 0B00       MOV              R11, #0     ; quotient of divis
                                                            ion



ARM Macro Assembler    Page 4 


  151 000000BE         
  152 000000BE F1BA 0F0A       CMP              R10, #10
  153 000000C2 DB06            BLT              write_cont
  154 000000C4 F1AA 0A0A 
                       mod     SUB              R10, #10
  155 000000C8 F10B 0B01       ADD              R11, #1
  156 000000CC F1BA 0F0A       CMP              R10, #10
  157 000000D0 DAF8            BGE              mod
  158 000000D2         
  159 000000D2 F1BB 0F00 
                       write_cont
                               CMP              R11, #0
  160 000000D6 BF08 4D1A       LDREQ            R5, =WRITE_0
  161 000000DA D0BF            BEQ              write
  162 000000DC         
  163 000000DC F1BB 0F01       CMP              R11, #1
  164 000000E0 BF08 4D19       LDREQ            R5, =WRITE_1
  165 000000E4 D0BA            BEQ              write
  166 000000E6         
  167 000000E6 F1BB 0F02       CMP              R11, #2
  168 000000EA BF08 4D17       LDREQ            R5, =WRITE_2
  169 000000EE D0B5            BEQ              write
  170 000000F0         
  171 000000F0 F1BB 0F03       CMP              R11, #3
  172 000000F4 BF08 4D16       LDREQ            R5, =WRITE_3
  173 000000F8 D0B0            BEQ              write
  174 000000FA         
  175 000000FA F1BB 0F04       CMP              R11, #4
  176 000000FE BF08 4D14       LDREQ            R5, =WRITE_4
  177 00000102 D0AB            BEQ              write
  178 00000104         
  179 00000104 F1BB 0F05       CMP              R11, #5
  180 00000108 BF08 4D13       LDREQ            R5, =WRITE_5
  181 0000010C D0A6            BEQ              write
  182 0000010E         
  183 0000010E F1BB 0F06       CMP              R11, #6
  184 00000112 BF08 4D11       LDREQ            R5, =WRITE_6
  185 00000116 D0A1            BEQ              write
  186 00000118         
  187 00000118 F1BB 0F07       CMP              R11, #7
  188 0000011C BF08 4D10       LDREQ            R5, =WRITE_7
  189 00000120 D09C            BEQ              write
  190 00000122         
  191 00000122 F1BB 0F08       CMP              R11, #8
  192 00000126 BF08 4D0E       LDREQ            R5, =WRITE_8
  193 0000012A D097            BEQ              write
  194 0000012C         
  195 0000012C BF08 4D0E       LDREQ            R5, =WRITE_9
  196 00000130 E794            B                write
  197 00000132         
  198 00000132         
  199 00000132                 ENDP
  200 00000132 00 00           ALIGN
  201 00000134                 END
              00000000 
              4000800C 
              40008008 
              40004100 
              00000000 



ARM Macro Assembler    Page 5 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\update_lcd.d -o.\objects\update_lcd.o -ID:\Project3fi
nal\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0-Beta12\CMSIS\Include -IC:\Keil_v5
\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1
" --predefine="__UVISION_VERSION SETA 521" --predefine="_RTE_ SETA 1" --predefi
ne="TM4C123GH6PM SETA 1" --list=.\listings\update_lcd.lst update_LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

WRITE_0 00000000

Symbol: WRITE_0
   Definitions
      At line 18 in file update_LCD.s
   Uses
      At line 160 in file update_LCD.s
Comment: WRITE_0 used once
WRITE_1 00000005

Symbol: WRITE_1
   Definitions
      At line 19 in file update_LCD.s
   Uses
      At line 164 in file update_LCD.s
Comment: WRITE_1 used once
WRITE_2 0000000A

Symbol: WRITE_2
   Definitions
      At line 20 in file update_LCD.s
   Uses
      At line 168 in file update_LCD.s
Comment: WRITE_2 used once
WRITE_3 0000000F

Symbol: WRITE_3
   Definitions
      At line 21 in file update_LCD.s
   Uses
      At line 172 in file update_LCD.s
Comment: WRITE_3 used once
WRITE_4 00000014

Symbol: WRITE_4
   Definitions
      At line 22 in file update_LCD.s
   Uses
      At line 176 in file update_LCD.s
Comment: WRITE_4 used once
WRITE_5 00000019

Symbol: WRITE_5
   Definitions
      At line 23 in file update_LCD.s
   Uses
      At line 180 in file update_LCD.s
Comment: WRITE_5 used once
WRITE_6 0000001E

Symbol: WRITE_6
   Definitions
      At line 24 in file update_LCD.s
   Uses
      At line 184 in file update_LCD.s
Comment: WRITE_6 used once
WRITE_7 00000023

Symbol: WRITE_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 25 in file update_LCD.s
   Uses
      At line 188 in file update_LCD.s
Comment: WRITE_7 used once
WRITE_8 00000028

Symbol: WRITE_8
   Definitions
      At line 26 in file update_LCD.s
   Uses
      At line 192 in file update_LCD.s
Comment: WRITE_8 used once
WRITE_9 0000002D

Symbol: WRITE_9
   Definitions
      At line 27 in file update_LCD.s
   Uses
      At line 195 in file update_LCD.s
Comment: WRITE_9 used once
WRITE_DASH 00000032

Symbol: WRITE_DASH
   Definitions
      At line 29 in file update_LCD.s
   Uses
      At line 73 in file update_LCD.s
Comment: WRITE_DASH used once
up_LCD 00000000

Symbol: up_LCD
   Definitions
      At line 15 in file update_LCD.s
   Uses
      None
Comment: up_LCD unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

chk_SSI_fifo 00000050

Symbol: chk_SSI_fifo
   Definitions
      At line 90 in file update_LCD.s
   Uses
      At line 93 in file update_LCD.s
      At line 101 in file update_LCD.s
      At line 107 in file update_LCD.s
      At line 123 in file update_LCD.s
      At line 128 in file update_LCD.s
      At line 133 in file update_LCD.s
      At line 138 in file update_LCD.s

mod 000000C4

Symbol: mod
   Definitions
      At line 154 in file update_LCD.s
   Uses
      At line 157 in file update_LCD.s
Comment: mod used once
pos_config 00000082

Symbol: pos_config
   Definitions
      At line 116 in file update_LCD.s
   Uses
      At line 50 in file update_LCD.s
      At line 65 in file update_LCD.s

update_LCD 00000000

Symbol: update_LCD
   Definitions
      At line 37 in file update_LCD.s
   Uses
      At line 35 in file update_LCD.s
Comment: update_LCD used once
update_LCD_area 00000000

Symbol: update_LCD_area
   Definitions
      At line 33 in file update_LCD.s
   Uses
      None
Comment: update_LCD_area unused
write 0000005C

Symbol: write
   Definitions
      At line 97 in file update_LCD.s
   Uses
      At line 74 in file update_LCD.s
      At line 161 in file update_LCD.s
      At line 165 in file update_LCD.s
      At line 169 in file update_LCD.s
      At line 173 in file update_LCD.s
      At line 177 in file update_LCD.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 181 in file update_LCD.s
      At line 185 in file update_LCD.s
      At line 189 in file update_LCD.s
      At line 193 in file update_LCD.s
      At line 196 in file update_LCD.s

write_cont 000000D2

Symbol: write_cont
   Definitions
      At line 159 in file update_LCD.s
   Uses
      At line 57 in file update_LCD.s
      At line 71 in file update_LCD.s
      At line 80 in file update_LCD.s
      At line 153 in file update_LCD.s

write_r 00000064

Symbol: write_r
   Definitions
      At line 101 in file update_LCD.s
   Uses
      At line 105 in file update_LCD.s
Comment: write_r used once
write_temp 000000BA

Symbol: write_temp
   Definitions
      At line 147 in file update_LCD.s
   Uses
      At line 54 in file update_LCD.s
      At line 68 in file update_LCD.s
      At line 77 in file update_LCD.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LCD_DC 40004100

Symbol: LCD_DC
   Definitions
      At line 10 in file update_LCD.s
   Uses
      At line 118 in file update_LCD.s
      At line 140 in file update_LCD.s

SSI0_DR 40008008

Symbol: SSI0_DR
   Definitions
      At line 11 in file update_LCD.s
   Uses
      At line 99 in file update_LCD.s
      At line 124 in file update_LCD.s

SSI0_SR 4000800C

Symbol: SSI0_SR
   Definitions
      At line 12 in file update_LCD.s
   Uses
      At line 90 in file update_LCD.s
Comment: SSI0_SR used once
3 symbols
361 symbols in table
